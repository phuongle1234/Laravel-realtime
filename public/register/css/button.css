.btn-primary {
  background: #00A29A;
  border: 1px solid #00A29A;
  -webkit-transition: 0.3s ease-in-out;
  transition: 0.3s ease-in-out;
  border-radius: 10px; }
  @media all and (min-width: 1280px) {
    .btn-primary:hover {
      background: #00A29A;
      border: 1px solid #00A29A;
      opacity: 0.8;
      -webkit-transition: 0.3s ease-in-out;
      transition: 0.3s ease-in-out; } }
  @media all and (max-width: 639px) {
    .btn-primary {
      font-size: 14px !important; } }

.btn-dark {
  border-radius: 10px; }
  @media all and (min-width: 1280px) {
    .btn-dark {
      -webkit-transition: 0.3s ease-in-out;
      transition: 0.3s ease-in-out; }
      .btn-dark:hover {
        opacity: 0.8;
        -webkit-transition: 0.3s ease-in-out;
        transition: 0.3s ease-in-out; } }

.linkpage {
  color: #00A29A;
  text-align: center;
  -webkit-transition: 0.3s ease-in-out;
  transition: 0.3s ease-in-out; }
  @media all and (min-width: 1280px) {
    .linkpage:hover {
      text-decoration: underline !important;
      -webkit-transition: 0.3s ease-in-out;
      transition: 0.3s ease-in-out;
      opacity: 0.8; } }

.btn-outline-primary {
  color: #00A29A;
  border-color: #00A29A;
  border-radius: 10px;
  -webkit-transition: 0.5s ease-in-out;
  transition: 0.5s ease-in-out; }
  @media all and (min-width: 1280px) {
    .btn-outline-primary:hover {
      background: #00A29A;
      -webkit-transition: 0.5s ease-in-out;
      transition: 0.5s ease-in-out;
      border-color: #00A29A; } }

.btn-image {
  display: -webkit-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
      -ms-flex-pack: center;
          justify-content: center;
  -webkit-box-align: center;
  -webkit-align-items: center;
      -ms-flex-align: center;
          align-items: center;
  width: 100%;
  height: 60px;
  margin: 0 auto; }
  .btn-image svg {
    margin-right: 10px; }
    .btn-image svg path {
      -webkit-transition: 0.3s ease-in-out;
      transition: 0.3s ease-in-out; }
  .btn-image span {
    font-size: 20px; }
  @media all and (min-width: 1280px) {
    .btn-image:hover svg path {
      fill: #ffffff;
      -webkit-transition: 0.3s ease-in-out;
      transition: 0.3s ease-in-out; } }
  @media all and (max-width: 639px) {
    .btn-image {
      height: 50px; }
      .btn-image span {
        font-size: 16px; }
      .btn-image svg {
        height: 20px; } }

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
